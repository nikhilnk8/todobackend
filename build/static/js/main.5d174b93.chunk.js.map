{"version":3,"sources":["List/List.js","App.js","index.js"],"names":["List","props","className","onClick","onSelect","id","text","App","useState","inputList","setInputList","tasks","setTasks","deleteItemHandler","preValue","filter","element","index","placeholder","onChange","event","target","value","alert","map","task","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAkBeA,G,MAhBF,SAACC,GACZ,OACE,yBAAKC,UAAU,KACb,4BACEA,UAAU,MACVC,QAAS,WACPF,EAAMG,SAASH,EAAMI,MAHzB,KAQA,4BAAKJ,EAAMK,SCmDFC,MA7Df,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAmBPC,EAAoB,SAACR,GACzBO,GAAS,SAACE,GACR,OAAOA,EAASC,QAAO,SAACC,EAASC,GAC/B,OAAOA,IAAUZ,SAKvB,OACE,6BACE,yBAAKH,UAAU,QACb,wBAAIA,UAAU,SAAd,cACA,yBAAKA,UAAU,SACb,2BACEA,UAAU,SACVgB,YAAY,eACZC,SA/Be,SAACC,GACxBV,EAAaU,EAAMC,OAAOC,QA+BlBA,MAAOb,IAET,4BAAQP,UAAU,MAAMC,QA9BH,WACT,KAAdM,EACFc,MAAM,yBAENX,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBL,OAEvBC,EAAa,OAuBT,KAGA,yBAAKR,UAAU,QACb,4BACGS,EAAMa,KAAI,SAACC,EAAMR,GAChB,OACE,kBAAC,EAAD,CACES,IAAKT,EACLZ,GAAIY,EACJX,KAAMmB,EACNrB,SAAUS,aC/C9Bc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5d174b93.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst List = (props) => {\r\n  return (\r\n    <div className=\"x\">\r\n      <button\r\n        className=\"btn\"\r\n        onClick={() => {\r\n          props.onSelect(props.id);\r\n        }}\r\n      >\r\n        x\r\n      </button>\r\n      <li>{props.text}</li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport List from \"./List/List\";\nfunction App() {\n  const [inputList, setInputList] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n\n  const itemEventHandler = (event) => {\n    setInputList(event.target.value);\n  };\n\n  const addItemsEventHandler = () => {\n    if (inputList === \"\") {\n      alert(\"Please Enter an Item\");\n    } else {\n      setTasks((preValue) => {\n        return [...preValue, inputList];\n      });\n      setInputList(\"\");\n    }\n  };\n\n  const deleteItemHandler = (id) => {\n    setTasks((preValue) => {\n      return preValue.filter((element, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"base\">\n        <h2 className=\"title\">TO DO List</h2>\n        <div className=\"input\">\n          <input\n            className=\"inputf\"\n            placeholder=\"Enter A Task\"\n            onChange={itemEventHandler}\n            value={inputList}\n          />\n          <button className=\"btn\" onClick={addItemsEventHandler}>\n            +\n          </button>\n          <div className=\"task\">\n            <ul>\n              {tasks.map((task, index) => {\n                return (\n                  <List\n                    key={index}\n                    id={index}\n                    text={task}\n                    onSelect={deleteItemHandler}\n                  ></List>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}